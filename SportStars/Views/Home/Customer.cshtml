@using PagedList.Mvc
@using SportStars.Models

@model  PagedList.IPagedList<SportStars.Models.AspNetUsers>

@{
    ViewBag.Title = "Customer";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<header style="padding: 5px">
    <h2 class="text-center" style="text-shadow:3px 2px 5px gray"><strong>Customers</strong></h2>
</header>

<hr />

<div id="alertdiv" class="alert alert-warning alert-dismissible" role="alert" style="display:none">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>

    <h4>
        <i class="glyphicon glyphicon-alert"></i>
        <strong>Alert!</strong>
    </h4>
    <h5></h5>
    @ViewBag.msg
</div>



<p>

    @*@Html.ActionLink("Create Customer", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-success" })*@
    <a href="@Url.Action("CriarCustomer", "Home")" class="btn btn-success">Create <i class="glyphicon glyphicon-open"></i></a>
    <a id="Delete" value="DeleteCustomer" class="btn btn-danger">Delete <i class="glyphicon glyphicon-remove"></i></a>
</p>

<div class="table-responsive text-center">
    <table class="table table-hover table-bordered">
        <thead>
            <tr class="active">
                <th><input type="checkbox" id="chkHeader" /></th>
                <th>Id</th>
                <th>Status</th>
                <th>Email</th>
                <th>Role</th>
                @*<th>
                        EmailConfirmed
                    </th>*@
                <th>PasswordHash</th>
                @*<th>
                        SecurityStamp
                    </th>*@
                <th>PhoneNumber</th>
                @*<th>
                        PhoneNumberConfirmed
                    </th>*@
                @*<th>
                        TwoFactorEnabled
                    </th>*@
                @*<th>
                        LockoutEndDateUtc
                    </th>*@
                @*<th>
                        LockoutEnabled
                    </th>*@
                <th>AccessFailedCount</th>
                <th>UserName</th>
                <th>images_path</th>
                <th></th>
            </tr>
        </thead>

        @{
            var y = (ViewBag.page - 1) * ViewBag.pagesize;
        }

        @foreach (var item in Model)
        {
            

            <tr>
                <td>
                    <input type="checkbox" name="ID" id="chkRow" value="@item.Id" />
                </td>
                <td class="details active" data-id="@item.Id" data-href="@Url.Action("DetailCustomer", "Home", new { id = item.Id })">
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @if (item.user_status.Equals("Ativo"))
                    {
                        <i style="color:green" class="fas fa-certificate" title="Ativo"></i>

                    }
                    else if (item.user_status.Equals("Inativo"))
                    {
                        <i style="color:red" class="fas fa-certificate" title="Inativo"></i>
                    }

                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    
                    @ViewBag.roles[y]
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.EmailConfirmed)
                    </td>*@
                <td>
                    <small>@Html.DisplayFor(modelItem => item.PasswordHash)</small>
                    
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.SecurityStamp)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.LockoutEndDateUtc)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.LockoutEnabled)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.AccessFailedCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @{
                        string cam = (item.images_path != null) ? item.images_path : "~/Images.customers/nouser.jpg";

                    }
                    <img src=@Url.Content(cam) style="height:60px;" alt="" />
                    @*@Html.DisplayFor(modelItem => item.images_path)*@
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "EditCustomer", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                         @Html.ActionLink("Details", "DetailCustomer", new { id = item.Id }, new { @class = "btn btn-warning btn-sm" })
                        @Html.ActionLink("Delete", null, null, new { id = item.Id, name = "lnkdelcust" })*@
                    <a href="@Url.Action("EditCustomer", "Home", new { id = item.Id})" class="btn btn-primary"><i class="glyphicon glyphicon-edit"></i></a>
                </td>
            </tr>
                            y = y + 1;
                        }

    </table>
    @Html.PagedListPager(Model, (page) => Url.Action("Customer", new { page, order = ViewBag.order, filtro = ViewBag.filtro }))
    @((Model.PageNumber > Model.PageCount)?1:Model.PageNumber) de  @Model.PageCount

    <div id="modal" class="modal fade" tabindex="-1" role="dialog" />

</div>


@if (ViewBag.msg != null)
{
    <script>
        //Alert WARNING for Viewbag.msg from Controller
        $(function () {
            $("#alertdiv").css("display", "block").fadeTo(6000, 1500).slideUp(1500, function () {
                $("#alertdiv").slideUp(1500);
            });
        });
    </script>
}

@section checkbox{
    <script>
        $('#chkHeader').click(function (event) {

            var selected = this.checked;
            // Iterate each checkbox
            $(':checkbox').each(function () { this.checked = selected; });

        });
    </script>

}

@section customerdetail{
    <script>

        $(function () {

            $(".details").click(function () {
                var id = $(this).attr("data-id");
                if (confirm("Really want to see details of product " + id + "?")) {
                    jQuery.noConflict();
                    //window.location = $(this).data('href');
                    $("#modal").modal('show').load($(this).data('href'));
                }

            });


        });

    </script>

}

@section customerdelete{
    <script>
        $("body").on("click", "#Delete", function () {
            //Get all the Checked CheckBoxes.
            var checked = $("input[id=chkRow]:checked");
            if (checked.length > 0) {

                //Display Confirmation Message.
                if (confirm("Do you want to delete " + checked.length + " row(s)?")) {

                    //Loop and build an Array of CustomerId to be deleted.
                    var id = [];
                    checked.each(function () {
                        var productid = $(this).closest("tr").find("td").eq(1).attr("data-id");
                        id.push(productid);
                    });

                    //Call Delete Action method.
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("DeleteCustomer")",
                        data: '{id: ' + JSON.stringify(id) + '}',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            console.log(JSON.stringify(response));
                            if (response.msg == "Customer(s) apagado(s) com sucesso!") {
                                checked.each(function () {
                                    var row = $(this).closest("tr");
                                    if ($("tr").length == 1) {
                                        row.find("td").html("&nbsp;");
                                        row.find("input").hide();
                                    } else {
                                        row.remove();
                                    }
                                });

                            }
                            $("h5").html(response.msg);
                            $("#alertdiv").css("display", "block").fadeTo(6000, 1500).slideUp(1500, function () {
                                $("#alertdiv").slideUp(1500);
                            });
                        },
                        error: function () { alert("Erro"); }
                    });
                }
            }
            else {
                alert("Choose at least one");
            }
        });



       @*$(function () {
           $("[name='lnkdelcust']").click((evt) => {
               evt = evt ? evt : window.event;
               evt.preventDefault();
               if (!confirm("Deseja mesmo eliminar o Customer?")) return false;
               $.ajax({
                   url: '@Url.Action("DeleteCustomer")',
                   dataType: 'json',
                   data: { id: evt.target.id },
                   success: function (data) {
                       console.log(JSON.stringify(data));
                       if (data.msg =="Customers apagados com sucesso!") $(evt.target).closest('tr').remove();
                       $("#alertdiv").html(data.msg);

                   },
                   error: function () { alert("erro");}
               });

           });


       });*@

    </script>
}